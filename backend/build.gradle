plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.ssafy'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(22)
    }
    sourceCompatibility = JavaVersion.VERSION_22
    targetCompatibility = JavaVersion.VERSION_22
}

repositories {
    mavenCentral()
}

sourceSets {
    main.java.srcDir("build/generated/sources/annotationProcessor/java/main")
}

dependencies {
    // Spring Web
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.5'
    // Spring Data JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    // PostgreSQL
    runtimeOnly 'org.postgresql:postgresql'
    // Spring Security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    // Spring Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    // MapStruct
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    // QueryDSL
    implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'
    implementation 'com.querydsl:querydsl-spatial:5.1.0'
    implementation 'com.querydsl:querydsl-sql-spatial'
    // QueryDSL Annotation Processor
    annotationProcessor 'com.querydsl:querydsl-apt:5.1.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-spatial:5.1.0'
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    // Devtools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    // Oauth2
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    // jwt
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    // Spring Boot Starter Thymeleaf
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    // AWS
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
    // Websocket
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.webjars:sockjs-client:1.5.1'
    implementation 'org.webjars:stomp-websocket:2.3.4'
    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

configurations {
    resolvableCompileOnly {
        canBeResolved = true
        canBeConsumed = false
        extendsFrom compileOnly
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.withType(JavaCompile).configureEach {
    options.annotationProcessorPath = configurations.annotationProcessor
}

tasks.withType(Jar).configureEach {
    enabled = true
}